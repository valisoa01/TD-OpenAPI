openapi: 3.0.3
info:
  title: User Profile API
  version: 1.0.0
paths:
  /users/{id}:
    get:
      summary: Récupérer un utilisateur avec toutes ses informations
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Profil utilisateur complet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users:
    post:
      summary: Créer une liste d’utilisateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            example:
              - first_name: Alice
                last_name: Doe
                birthdate: "2000-01-01"
                email: alice@example.com
                address_street: Rue A
                address_city: Tana
                address_country: MG
                address_postal_code: 101
                needs_newsletter: true
                language: fr
      responses:
        '201':
          description: Liste des utilisateurs créés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
  /users/{id}/personalInfo:
    put:
      summary: Mettre à jour les informations personnelles
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
      responses:
        '200':
          description: Informations personnelles mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{id}/address:
    put:
      summary: Mettre à jour l’adresse
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Adresse mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{id}/preferences:
    put:
      summary: Mettre à jour les préférences
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: Préférences mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

components:
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema:
        type: string
  schemas:
    UserProfile:
      allOf:
        - $ref: '#/components/schemas/CreateUserProfile'
        - type: object
          properties:
            identifier:
              type: string
    CreateUserProfile:
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
    Address:
      type: object
      properties:
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: integer
    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum: [mg, fr, eng]
